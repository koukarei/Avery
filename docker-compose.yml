services:
  # gradio:
  #   env_file:
  #     - gradio-project/.env
  #   container_name: frontend
  #   build:
  #     context: gradio-project
  #     dockerfile: Dockerfile
  #   command: python3 gradio_app.py
  #   ports:
  #     - "7870:7860"
  #   tty: true
  #   volumes:
  #     - ./gradio-project:/app/gradio

  # react_front:
  #   container_name: react_front
  #   build:
  #     context: react-project
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./react-project/avery-app:/code
  #     - node_modules:/avery-app/node_modules
  #   command: sh -c "npm start"
  #   ports:
  #     - "7873:3000"
  #   tty: true
  #   networks:
  #     - avery-network
      
  db:
    build:
      context: db-project
      dockerfile: Dockerfile
    container_name: mysql
    command: mysqld
    restart: always
    env_file:
      - db-project/.env
    ports:
        - 7872:3306
    volumes:
        - db-store:/var/lib/mysql
        - ./db-project/conf.d:/etc/mysql/conf.d
        # ★ ローカルのscriptディレクトリにマウントします
        - ./db-project/init:/docker-entrypoint-initdb.d 
    tty: true
    networks:
      - avery-network
      
  backend-project:
    env_file:
      - backend-project/.env
    container_name: backend
    build:
      context: backend-project
      dockerfile: Dockerfile
    volumes:
      - ./backend-project/backend:/backend
      - ./backend-project/media:/static
    command: fastapi dev --host 0.0.0.0 --port 8000 /backend/main.py
    ports:
      - "7871:8000"
    tty: true
    networks:
      - avery-network

  # stanza-project:
  #   container_name: stanza
  #   build:
  #     context: stanza-project
  #     dockerfile: Dockerfile
  #   ports:
  #     - "7874:5001"
  #   networks:
  #     - avery-network

volumes:
  db-store:
  media:
  node_modules:

networks:
  avery-network:
    driver: bridge